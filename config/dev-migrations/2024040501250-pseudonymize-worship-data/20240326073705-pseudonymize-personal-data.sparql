PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX person: <http://www.w3.org/ns/person#>
PREFIX persoon: <https://data.vlaanderen.be/ns/persoon#>

DELETE {
  GRAPH ?g {
    ?person foaf:familyName ?fn .
    ?person foaf:givenName ?gn .
  }
} INSERT {
  GRAPH ?g {
    ?person foaf:givenName ?gn_s .
    ?person foaf:familyName ?fn_s .
  }
} WHERE {
  BIND("25663716512231276038934668311170119609149297699430613635983433414904082203772" AS ?pepper) .

  GRAPH ?g {
    ?person a person:Person .
    # Ensure salt is unique per person so that people with the same name result
    # different the pseudonimized values, similar to how salts are used in
    # password hashing
    BIND(SHA256(CONCAT(?pepper, ?person)) AS ?salt) .

    OPTIONAL {
      ?person foaf:givenName ?gn .
      BIND(SHA256(CONCAT(?salt, ?gn)) AS ?gn_s) .
    }
    OPTIONAL {
      ?person foaf:familyName ?fn .
      BIND(SHA256(CONCAT(?salt, ?fn)) AS ?fn_s) .
    }
  }
  VALUES ?g {
    <http://mu.semte.ch/graphs/worship-service>
    <http://redpencil.data.gift/id/deltas/producer/organizations>
  }
}
;
# Only pseudonimize `persoon:gebruikteVoornaam` for persons for which one is
# actually set. Otherwise this results in inserting unnecessary extra triples.
DELETE {
  GRAPH ?g {
    ?person persoon:gebruikteVoornaam ?gvn.
  }
} INSERT {
  GRAPH ?g {
    ?person persoon:gebruikteVoornaam ?gvn_s .
  }
} WHERE {
  BIND("13063116701594620978992364377599395959031732309526884983899803968957078375772" AS ?pepper) .

  GRAPH ?g {
    ?person a person:Person ;
      persoon:gebruikteVoornaam ?gvn .
    # Ensure salt is unique per person so that people with the same name result
    # different the pseudonimized values, similar to how salts are used in
    # password hashing
    BIND(SHA256(CONCAT(?pepper, ?person)) AS ?salt) .
    BIND(SHA256(CONCAT(?salt, ?gvn)) AS ?gvn_s) .
  }
  VALUES ?g {
    <http://mu.semte.ch/graphs/worship-service>
    <http://redpencil.data.gift/id/deltas/producer/organizations>
  }
}
